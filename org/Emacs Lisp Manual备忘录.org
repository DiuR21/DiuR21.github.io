#+TITLE: Emacs Lisp Manual备忘录

| 章节                                    |   完成时间 | 功能                                                                   |
|-----------------------------------------+------------+------------------------------------------------------------------------|
| Mode Line Format etc.                   | 2018-10-31 | Mode Line Format's %-construct & Mode Line Format Constructed Measures |
| 20.7 Yes-or-No Queries                  | 2018-11-03 | Intro About Yes-or-No Marco                                            |
| 25.9.1 File Name Components             | 2018-11-04 | File Name Components and the way to control it                         |
| 8.1.4 The progn Special Form            | 2018-11-06 | Intro About progn Marco                                                |
| 14.7.1 The append Function              | 2018-11-06 | Intro About Append Function                                            |
| 25.9 File Names                         | 2018-11-06 | Intro All About File Names                                             |
| 25.10 Contents of Directories           | 2018-11-11 | Intro Contents of Dir..About how to contrl the contents in dir.        |
| 13.2.3 Other Features of Argument Lists | 2018-11-15 | Option Argument & Rest Argument                                        |
| 40.5 Time of Day                        | 2018-11-15 | the formula: high * 2**16 + low + micro * 10**−6 + pico * 10**−12.     |
| 11.1 Sequencing                         | 2018-11-15 | progn prog1 prog2                                                      |
| 13.5 Calling Functions                  | 2018-11-15 | funcall & apply                                                        |
| 13.11 Advising Emacs Lisp Functions     | 2018-11-15 | advice-add & advice-remove & add-function & remove-function            |







#+begin_src Emacs-lisp
(required-vars...
[&optional optional-vars...]
[&rest rest-var])
#+end_src

#+begin_quote
20.7

If either of these functions is called in a command that was invoked using the mouse—more precisely, 

if last-nonmenu-event (see Command Loop Info) is either nil or a list—then it uses a dialog box or pop-up menu to ask the question. 

Otherwise, it uses keyboard input. You can force use either of the mouse or of keyboard input by binding last-nonmenu-event to a suitable value around the call. 
#+end_quote

[[https://emacs.stackexchange.com/questions/18570/when-why-should-i-use-progn][When/why should I use progn?]] -- 日常被沙雕网友坑..
#+begin_quote
It is worth noting that using progn works in both cases, while omitting it only works if the macro accepts multiple forms. 

As a result of this, some people prefer to simply always use progn,because it will always work.
#+end_quote
